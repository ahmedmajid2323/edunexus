# Guide de Contribution √† EduNexus

Merci de votre int√©r√™t pour EduNexus ! Voici comment vous pouvez contribuer au projet.

## 1. Pr√©-requis
Avant de contribuer, assurez-vous d‚Äôavoir :
- Un compte GitHub
- Git install√© sur votre machine
- Node.js et npm install√©s
- Acc√®s au d√©p√¥t EduNexus : [GitHub Repo](https://github.com/ahmedmajid2323/edunexus.git)

## 2. Comment Contribuer ?

### a) Fork et Clone du projet
1. Forkez le d√©p√¥t sur GitHub.
2. Clonez votre fork localement :
   ```bash
   git clone https://github.com/votre-utilisateur/edunexus.git
   cd edunexus
   ```

### b) Cr√©ation d'une Branche
Cr√©ez une nouvelle branche pour vos modifications :
```bash
git checkout -b feature-nom-de-la-fonctionnalit√©
```

### c) D√©veloppement et Tests
- Ajoutez/modifiez le code.
- V√©rifiez que le projet fonctionne en local.
- Ex√©cutez les tests (s‚Äôil y en a) :
  ```bash
  npm test
  ```

### d) Commit et Push
1. Ajoutez vos modifications :
   ```bash
   git add .
   ```
2. Faites un commit avec un message clair :
   ```bash
   git commit -m "Ajout de [fonctionnalit√©]"
   ```
3. Poussez vos modifications vers votre fork :
   ```bash
   git push origin feature-nom-de-la-fonctionnalit√©
   ```

### e) Cr√©ation d'une Pull Request
1. Allez sur le d√©p√¥t GitHub principal.
2. Cliquez sur "New Pull Request".
3. S√©lectionnez votre branche et soumettez votre PR.
4. Attendez la revue et les retours.

## 3. Bonnes Pratiques
- **Respectez le style de code** : Suivez les conventions utilis√©es dans le projet.
- **Commentez votre code** : Expliquez les parties complexes.
- **R√©digez des tests** : V√©rifiez que vos modifications ne cassent rien.
- **Soyez clair** : Indiquez l'objectif de vos modifications dans vos commits et PRs.

Merci pour votre contribution ! üöÄ

